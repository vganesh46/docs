{
  "openapi": "3.0.0",
  "info": {
    "title": "Stockinsights APIs",
    "description": "All the APIs of stockinsights",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://stockinsights-ai-main-95a26a0.zuplo.app"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/in/v0/documents": {
      "get": {
        "summary": "Filings Feed",
        "description": "The Filings Feed API retrieves real-time updates on earnings call transcripts and other corporate filings (e.g., Annual Reports, Investor Presentations, Corporate Announcements) published on the BSE/NSE exchanges based on the specified document type. Users can optionally filter results by sector, timeframe, or other parameters to facilitate targeted information retrieval.",
        "operationId": "getDocumentFeed",
        "parameters": [
          {
            "name": "document_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "annual-report",
                "quarterly-result",
                "earnings-transcript",
                "investor-presentation",
                "announcement"
              ]
            },
            "description": "The type of document to retrieve. Choose from 'earnings-transcript', 'annual-report', 'announcement'."
          },
          {
            "name": "ticker",
            "in": "query",
            "description": "Exchange:Ticker of companies. Multiple tickers can be provided separated by commas. Example - NSE:ZOMATO, BSE:TCS. Get tickers from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "quarter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Fiscal quarter values in the format Q1, Q2, Q3, Q4. Multiple values can be provided separated by commas. Use this parameter to filter by specific quarters."
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Fiscal year values in the format YYYY (e.g., 2024, 2023). Multiple values can be provided separated by commas. Use this parameter to filter data by specific years."
          },
          {
            "name": "sector",
            "in": "query",
            "description": "Sector classification of the companies. Multiple values can be provided separated by commas. Get valid sector values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Industry classification of the companies. Multiple values can be provided separated by commas. Check valid industry values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination. This parameter is optional and defaults to 1 if not specified.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page. This parameter is optional and defaults to 20 if not specified. Maximum value is 50.",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://www.stockinsights.ai"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound",
              "set-headers-inbound"
            ]
          }
        }
      }
    },
    "/api/in/v0/documents/announcement": {
      "get": {
        "summary": "Announcements Tagged Feed",
        "description": "The Announcements Tagged Feed API delivers a real-time stream of Corporate filings disclosed to BSE/NSE exchanges, each tagged with AI-generated insights including summaries, category tags (drawn from a predefined set of categories), and sentiment tags. Users can utilize this tagged feed to monitor daily updates on material events reported by companies, enabling them to build custom email notification systems or display widgets for tracking significant corporate disclosures in their apps.",
        "operationId": "getAnnouncementFeed",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Exchange:Ticker of companies. Multiple tickers can be provided separated by commas. Example - NSE:ZOMATO, BSE:TCS. Get tickers from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Start date in YYYY-MM-DD format. Use this parameter to filter data from a specific start date.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "End date in YYYY-MM-DD format. Use this parameter to filter data till a specific end date.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "announcement_type_id",
            "in": "query",
            "description": "Comma-separated Announcement Category IDs (Allowed Values - 1 to 26). Check the [corporate-announcements-types mapping](https://drive.google.com/file/d/1NcYE5nV5x2IRNZzYu_GMH_iSuh1aiVXe/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "sentiment",
            "in": "query",
            "description": "Comma-separated sentiment values (Allowed values - positive, negative, neutral).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "sector",
            "in": "query",
            "description": "Sector classification of the companies. Multiple values can be provided separated by commas. Get valid sector values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Industry classification of the companies. Multiple values can be provided separated by commas. Check valid industry values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view).",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page. This parameter is optional and defaults to 20 if not specified. Maximum value is 50.",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination. This parameter is optional and defaults to 1 if not specified.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success response. Contains Paginated Announcements.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Announcement"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/Meta"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://www.stockinsights.ai"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound",
              "set-headers-inbound"
            ]
          }
        },
        "x-internal": false
      }
    },
    "/api/in/v0/documents/full-text-search": {
      "post": {
        "summary": "Filings Keyword Search",
        "description": "The Filings Keyword Search API fetches search results from our database for specified filings (earnings transcripts and annual reports) for any given keyword/phrase. Returns upto 100 search results sorted by latest date",
        "operationId": "searchDocuments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Keyword/Phrase to Search"
                  },
                  "filters": {
                    "type": "object",
                    "description": "Filters to narrow the search scope. For example, the search can be limited to few companies only. Without filters, search will be performed across all the filings.                    ",
                    "$ref": "#/components/schemas/DocumentSearchFilters"
                  }
                },
                "required": [
                  "query",
                  "filters"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "description": "Search Result",
                      "$ref": "#/components/schemas/DocumentWithSearchResults"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://www.stockinsights.ai"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound",
              "set-headers-inbound"
            ]
          }
        }
      }
    },
    "/api/in/v0/documents/embeddings-search": {
      "post": {
        "summary": "Filings Embeddings Search",
        "description": "The Filings Embeddings Search API retrieves the nearest chunks of text (based on semantic similarity) from our database for specified filings (earnings transcripts and annual reports) for any given user query/prompt in natural langauge. Users can utilize this functionality for various purposes, such as building an AI-search engine, AI-tagging, etc., using the associated text from these filings.",
        "operationId": "documentEmbeddingSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "query"
                ],
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "The user query in natural language for which similar chunks of filings text is retrieved using OpenAI embeddings."
                  },
                  "top_k": {
                    "type": "integer",
                    "default": 10,
                    "maximum": 100,
                    "description": "Number of top matching chunks to return in the response. This parameter is optional and defaults to 20 if not specified. Maximum value is 50."
                  },
                  "filters": {
                    "type": "object",
                    "description": "Filters to narrow the search scope. For example, the search can be limited to few companies only. Without filters, search will be performed across all the filings.",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "earnings-transcript",
                            "annual-report"
                          ]
                        },
                        "description": "The type of filings to include in the search. Choose from 'earnings-transcript', 'annual-report'."
                      },
                      "tickers": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "NSE:OLECTRA"
                        },
                        "maxItems": 100,
                        "description": "Exchange:Ticker of companies. Multiple tickers can be provided separated by commas. Example - NSE:ZOMATO, BSE:TCS. Get tickers from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view)."
                      },
                      "sectors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 5,
                        "description": "Sector classification of the companies. Multiple values can be provided separated by commas. Get valid sector values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view)."
                      },
                      "industries": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 5,
                        "description": "Industry classification of the companies. Multiple values can be provided separated by commas. Check valid industry values from [Company Details](https://drive.google.com/file/d/1oeghBbg6HmW5hl5MDR4CUFZDYYIjJorQ/view)."
                      },
                      "years": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^[0-9]{4}$"
                        },
                        "description": "Fiscal year values in the format YYYY (e.g., 2024, 2023). Multiple values can be provided separated by commas. Use this parameter to filter data by specific years."
                      },
                      "quarters": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Q1",
                            "Q2",
                            "Q3",
                            "Q4"
                          ]
                        },
                        "description": "Fiscal quarter values in the format Q1, Q2, Q3, Q4. Multiple values can be provided separated by commas. Use this parameter to filter by specific quarters."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response. Contains the list of chunks for given query vector",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status code"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentChunkWithScore"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://www.stockinsights.ai"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound",
              "set-headers-inbound"
            ]
          }
        }
      }
    },
  "/api/in/v0/results-calendar": {
      "get": {
        "summary": "Results Calendar API",
        "description": "API returning the paginated latest results calendar",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Optional. Comma-separated ticker values: Example - SWIGGY, TCS. In case of ticker conflicts, use - exchange:ticker values. Example - NSE:ZOMATO, BSE:TCS, BSE:500002",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyCalendarResult"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://www.stockinsights.ai"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "rate-limit-inbound",
              "set-headers-inbound"
            ]
          }
        }
      }
    },
  "components": {
    "schemas": {
      "DocumentSearchFilters": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "earnings-transcript",
              "annual-report",
              "announcement"
            ],
            "description": "Type of document (e.g., earnings-transcript)"
          },
          "tickers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Company Tickers. Format: exchange:ticker values. Example - [NSE:ZOMATO, BSE:TCS]"
          },
          "sectors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Sectors (based on Industry Classification) to filter by. Check the valid values - https://docs.google.com/spreadsheets/d/17-Zq8E6G7hAq4-3QdjLj_b1EGghFcM9OB7Om5AXSLRI/edit?gid=0#gid=0"
          },
          "industries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Industries (based on Industry Classification) to filter by. Check the valid values - https://docs.google.com/spreadsheets/d/17-Zq8E6G7hAq4-3QdjLj_b1EGghFcM9OB7Om5AXSLRI/edit?gid=582731802#gid=582731802"
          },
          "quarters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Quarters to filter by"
          },
          "years": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Years to filter by"
          }
        },
        "required": [
          "types"
        ]
      },
      "ExchangeTicker": {
        "type": "object",
        "properties": {
          "exchange": {
            "type": "string",
            "enum": [
              "BSE",
              "NSE"
            ],
            "description": "Exchange Name"
          },
          "ticker": {
            "type": "string",
            "description": "Company ticker in the exchange"
          },
          "id": {
            "type": "string",
            "description": "Company ID/Code in the exchange. Not present for NSE"
          },
          "url": {
            "type": "string",
            "description": "Company URL in the exchange"
          }
        }
      },
      "Document": {
        "type": "object",
        "description": "Represents details of a company document. A document could be either earnings transcript, Annual Report or Announcement. Contains the link to the raw document and the AI insights of the document ",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal Document ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "earnings-transcript",
              "annual-report",
              "announcement"
            ],
            "description": "Represents the type of document"
          },
          "pdf_link": {
            "type": "string",
            "description": "PDF Link of the document. A document can have either a pdf_link or html_link"
          },
          "html_link": {
            "type": "string",
            "description": "HTML Link of the document. A document can have either a pdf_link or html_link"
          },
          "company_id": {
            "type": "string",
            "description": "Internal Company ID"
          },
          "company_name": {
            "type": "string"
          },
          "ticker": {
            "type": "string",
            "description": ""
          },
          "exchange_tickers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeTicker"
            }
          },
          "year": {
            "type": "string",
            "description": "Document associated year"
          },
          "month": {
            "type": "string",
            "description": "Document associated month"
          },
          "quarter": {
            "type": "string",
            "description": "Document associated Quarter"
          },
          "published_date": {
            "type": "string",
            "description": "UTC Timestamp of the document published date-time",
            "format": "date-time"
          }
        }
      },
      "DocumentWithSearchResults": {
        "type": "object",
        "description": "Represents details of a matching company document.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal Document ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "earnings-transcript",
              "annual-report",
              "announcement"
            ],
            "description": "Represents the type of document"
          },
          "pdf_link": {
            "type": "string",
            "description": "PDF Link of the document. A document can have either a pdf_link or html_link"
          },
          "html_link": {
            "type": "string",
            "description": "HTML Link of the document. A document can have either a pdf_link or html_link"
          },
          "company_id": {
            "type": "string",
            "description": "Internal Company ID"
          },
          "company_name": {
            "type": "string"
          },
          "ticker": {
            "type": "string",
            "description": ""
          },
          "exchange_tickers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeTicker"
            }
          },
          "year": {
            "type": "string",
            "description": "Document associated year"
          },
          "month": {
            "type": "string",
            "description": "Document associated month"
          },
          "quarter": {
            "type": "string",
            "description": "Document associated Quarter"
          },
          "published_date": {
            "type": "string",
            "description": "UTC Timestamp of the document published date-time",
            "format": "date-time"
          },
          "highlights": {
            "type": "object",
            "description": "Text in the document matching with the query",
            "properties": {
              "highlight_term": {
                "type": "array",
                "description": "query term and other similar terms",
                "items": {
                  "type": "string"
                }
              },
              "highlight_text": {
                "type": "string",
                "description": "matching text"
              }
            }
          }
        }
      },
      "Announcement": {
        "type": "object",
        "description": "Each announcement is tagged with AI-generated insights, such as summary, category tags from a predefined set of categories and sentiment of the announcement content.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal ID of the announcement"
          },
          "type": {
            "type": "string",
            "description": "Document type. By default, the value is announcement"
          },
          "ticker": {
            "type": "string",
            "description": "Internal ticker representation for the company."
          },
          "company_name": {
            "type": "string"
          },
          "exchange_tickers": {
            "description": "Contains the company ticker information in BSE, NSE.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeTicker"
            }
          },
          "source_link": {
            "type": "string",
            "description": "The link to the raw announcement document."
          },
          "ai_insights": {
            "type": "object",
            "properties": {
              "announcement_type_id": {
                "description": "Announcement category/type ID. Example - An announcement could be marked as Company Merger(ID=1)",
                "type": "string"
              },
              "announcement_type": {
                "description": "The category/type name. Example - An announcement could be marked as Company Merger(ID=1)",
                "type": "string"
              },
              "summary_header": {
                "type": "string",
                "description": "AI-generated summary header for the announcement"
              },
              "summary_text": {
                "type": "string",
                "description": "AI-generated summary for the announcement"
              },
              "sentiment": {
                "type": "string",
                "description": "Sentiment of the announcement.",
                "enum": [
                  "positive",
                  "negative",
                  "neutral"
                ]
              }
            }
          },
          "published_date": {
            "type": "string",
            "format": "date-time",
            "description": "UTC Timestamp of the announcement published date-time"
          }
        }
      },
      "DocumentChunk": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The chunk's text"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "chunk_num": {
                "type": "string",
                "description": "Identifier of the chunk in the document"
              }
            }
          },
          "document": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Filing type"
              },
              "published_date": {
                "type": "string",
                "format": "date-time",
                "description": "Filing date"
              },
              "year": {
                "type": "string",
                "description": "Year of the filing"
              },
              "quarter": {
                "type": "string",
                "enum": [
                  "Q1",
                  "Q2",
                  "Q3",
                  "Q4"
                ],
                "description": "Quarter of the filing"
              },
              "link": {
                "type": "string",
                "description": "URL of the document"
              }
            }
          },
          "company": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Internal representation of ID"
              },
              "company_name": {
                "type": "string",
                "description": "Company Name"
              },
              "ticker": {
                "type": "string",
                "description": "Internal ticker of the company"
              },
              "exchange_tickers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExchangeTicker"
                }
              }
            }
          }
        }
      },
      "DocumentChunkWithScore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentChunk"
          },
          {
            "type": "object",
            "properties": {
              "similarity_score": {
                "type": "number",
                "description": "Similarity score"
              }
            }
          }
        ]
      },
      "DocumentChunkWithEmbedding": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentChunk"
          },
          {
            "type": "object",
            "properties": {
              "embedding": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "description": "Vector Embedding of the chunk"
              }
            }
          }
        ]
      },
      "CompanyCalendarResult": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string",
            "example": "Sanofi India Ltd"
          },
          "ticker": {
            "type": "string",
            "example": "SANOFI"
          },
          "security_code": {
            "type": "string",
            "example": "500674"
          },
          "result_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-27T00:00:00.000Z"
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "format": "int64",
            "description": "Total Announcemnt count for the given request parameters."
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "Current Page number."
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Number of Announcements in the current response."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Error status"
                },
                "title": {
                  "type": "string",
                  "description": "Error description"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}